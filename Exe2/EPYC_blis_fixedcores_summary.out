Running BLIS on EPYC...
Running BLIS (close)... results in /u/dssc/msmaddi/HPC/Exe2/fixed_cores/EPYC/close_cores
make: Nothing to be done for 'double'.
make: Nothing to be done for 'float'.
BLIS files compiled

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.23036204 s


2000x2000x2000	0.023036 s	694.558878 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.15100372 s


2000x2000x2000	0.015100 s	1059.576546 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.21513712 s


2000x2000x2000	0.021514 s	743.711731 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.13938719 s


2000x2000x2000	0.013939 s	1147.881667 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.22427149 s


2000x2000x2000	0.022427 s	713.421042 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.14133204 s


2000x2000x2000	0.014133 s	1132.085831 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.22633316 s


2000x2000x2000	0.022633 s	706.922485 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.14440191 s


2000x2000x2000	0.014440 s	1108.018585 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.21484048 s


2000x2000x2000	0.021484 s	744.738608 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.14092248 s


2000x2000x2000	0.014092 s	1135.375988 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.33953613 s


2500x2500x2500	0.033954 s	920.373334 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.21191074 s


2500x2500x2500	0.021191 s	1474.677499 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.34211557 s


2500x2500x2500	0.034212 s	913.434019 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.21163463 s


2500x2500x2500	0.021163 s	1476.601443 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.34384271 s


2500x2500x2500	0.034384 s	908.845792 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.21176448 s


2500x2500x2500	0.021176 s	1475.696019 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.34519938 s


2500x2500x2500	0.034520 s	905.273932 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.21281435 s


2500x2500x2500	0.021281 s	1468.416016 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.33850256 s


2500x2500x2500	0.033850 s	923.183565 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.21179985 s


2500x2500x2500	0.021180 s	1475.449581 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.50259323 s


3000x3000x3000	0.050259 s	1074.427525 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.29885642 s


3000x3000x3000	0.029886 s	1806.887736 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.50393174 s


3000x3000x3000	0.050393 s	1071.573702 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.29796195 s


3000x3000x3000	0.029796 s	1812.311941 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.49623588 s


3000x3000x3000	0.049624 s	1088.192172 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.30180208 s


3000x3000x3000	0.030180 s	1789.252082 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.48649554 s


3000x3000x3000	0.048650 s	1109.979343 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.30005127 s


3000x3000x3000	0.030005 s	1799.692433 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.49301911 s


3000x3000x3000	0.049302 s	1095.292229 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.29379652 s


3000x3000x3000	0.029380 s	1838.006795 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.69301837 s


3500x3500x3500	0.069302 s	1237.340938 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.40621130 s


3500x3500x3500	0.040621 s	2110.970325 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.69014356 s


3500x3500x3500	0.069014 s	1242.495112 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.40381429 s


3500x3500x3500	0.040381 s	2123.500880 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.68934607 s


3500x3500x3500	0.068935 s	1243.932529 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.40336302 s


3500x3500x3500	0.040336 s	2125.876586 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.68820763 s


3500x3500x3500	0.068821 s	1245.990254 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.39411112 s


3500x3500x3500	0.039411 s	2175.782302 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.69780598 s


3500x3500x3500	0.069781 s	1228.851607 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.39411877 s


3500x3500x3500	0.039412 s	2175.740069 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.94591711 s


4000x4000x4000	0.094592 s	1353.184107 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.52723206 s


4000x4000x4000	0.052723 s	2427.773455 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.92820277 s


4000x4000x4000	0.092820 s	1379.009028 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.52820758 s


4000x4000x4000	0.052821 s	2423.289723 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.93345013 s


4000x4000x4000	0.093345 s	1371.256973 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.52411349 s


4000x4000x4000	0.052411 s	2442.219146 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.93051225 s


4000x4000x4000	0.093051 s	1375.586404 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.54363899 s


4000x4000x4000	0.054364 s	2354.503675 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.94371395 s


4000x4000x4000	0.094371 s	1356.343201 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.52935804 s


4000x4000x4000	0.052936 s	2418.023159 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.140320564 s


4500x4500x4500	0.140321 s	1298.811769 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.68420661 s


4500x4500x4500	0.068421 s	2663.669093 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.141349821 s


4500x4500x4500	0.141350 s	1289.354303 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.67943804 s


4500x4500x4500	0.067944 s	2682.363796 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.139755982 s


4500x4500x4500	0.139756 s	1304.058670 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.69154790 s


4500x4500x4500	0.069155 s	2635.392284 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.140792362 s


4500x4500x4500	0.140792 s	1294.459425 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.68343726 s


4500x4500x4500	0.068344 s	2666.667603 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.139063820 s


4500x4500x4500	0.139064 s	1310.549358 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.68029093 s


4500x4500x4500	0.068029 s	2679.000880 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.223510856 s


5000x5000x5000	0.223511 s	1118.513903 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.84676667 s


5000x5000x5000	0.084677 s	2952.407184 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.222847539 s


5000x5000x5000	0.222848 s	1121.843217 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.86001378 s


5000x5000x5000	0.086001 s	2906.930166 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.223542085 s


5000x5000x5000	0.223542 s	1118.357646 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.83891509 s


5000x5000x5000	0.083892 s	2980.039374 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.224642503 s


5000x5000x5000	0.224643 s	1112.879338 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.84362627 s


5000x5000x5000	0.084363 s	2963.397524 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.224973165 s


5000x5000x5000	0.224973 s	1111.243645 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.84770062 s


5000x5000x5000	0.084770 s	2949.154384 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.344090461 s


5500x5500x5500	0.344090 s	967.042210 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.105378944 s


5500x5500x5500	0.105379 s	3157.651684 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.338571022 s


5500x5500x5500	0.338571 s	982.807087 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.105016631 s


5500x5500x5500	0.105017 s	3168.545752 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.343100650 s


5500x5500x5500	0.343101 s	969.832030 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.104285526 s


5500x5500x5500	0.104286 s	3190.759186 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.344298129 s


5500x5500x5500	0.344298 s	966.458926 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.103849409 s


5500x5500x5500	0.103849 s	3204.158822 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.343620416 s


5500x5500x5500	0.343620 s	968.365046 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.105523445 s


5500x5500x5500	0.105523 s	3153.327680 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.462167110 s


6000x6000x6000	0.462167 s	934.726835 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.134622058 s


6000x6000x6000	0.134622 s	3208.983776 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.465918391 s


6000x6000x6000	0.465918 s	927.201004 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.134342343 s


6000x6000x6000	0.134342 s	3215.665220 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.460631091 s


6000x6000x6000	0.460631 s	937.843772 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.130794671 s


6000x6000x6000	0.130795 s	3302.886858 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.463626443 s


6000x6000x6000	0.463626 s	931.784644 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.133767213 s


6000x6000x6000	0.133767 s	3229.490922 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.464716173 s


6000x6000x6000	0.464716 s	929.599668 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.132604467 s


6000x6000x6000	0.132604 s	3257.808804 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.597570308 s


6500x6500x6500	0.597570 s	919.138707 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.174258887 s


6500x6500x6500	0.174259 s	3151.919592 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.597812901 s


6500x6500x6500	0.597813 s	918.765719 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.174157128 s


6500x6500x6500	0.174157 s	3153.761240 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.602741149 s


6500x6500x6500	0.602741 s	911.253530 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.174843649 s


6500x6500x6500	0.174844 s	3141.378043 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.597690995 s


6500x6500x6500	0.597691 s	918.953112 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.181115160 s


6500x6500x6500	0.181115 s	3032.600915 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.599997942 s


6500x6500x6500	0.599998 s	915.419807 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.173858134 s


6500x6500x6500	0.173858 s	3159.184948 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.749902125 s


7000x7000x7000	0.749902 s	914.786046 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.264038991 s


7000x7000x7000	0.264039 s	2598.101127 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.750331972 s


7000x7000x7000	0.750332 s	914.261987 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.251168981 s


7000x7000x7000	0.251169 s	2731.228981 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.752523615 s


7000x7000x7000	0.752524 s	911.599299 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.264870133 s


7000x7000x7000	0.264870 s	2589.948486 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.749425750 s


7000x7000x7000	0.749426 s	915.367533 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.262594614 s


7000x7000x7000	0.262595 s	2612.391738 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.749808350 s


7000x7000x7000	0.749808 s	914.900454 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.253435702 s


7000x7000x7000	0.253436 s	2706.800954 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.911258513 s


7500x7500x7500	0.911259 s	925.917276 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.354684820 s


7500x7500x7500	0.354685 s	2378.872600 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.912155662 s


7500x7500x7500	0.912156 s	925.006592 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.359208327 s


7500x7500x7500	0.359208 s	2348.915480 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.910123810 s


7500x7500x7500	0.910124 s	927.071670 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.362941466 s


7500x7500x7500	0.362941 s	2324.755034 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.920760640 s


7500x7500x7500	0.920761 s	916.361933 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.364908004 s


7500x7500x7500	0.364908 s	2312.226618 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.918697900 s


7500x7500x7500	0.918698 s	918.419428 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.360722843 s


7500x7500x7500	0.360723 s	2339.053421 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.105066019 s


8000x8000x8000	1.105066 s	926.641470 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.500177580 s


8000x8000x8000	0.500178 s	2047.272891 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.117160125 s


8000x8000x8000	1.117160 s	916.609873 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.501842041 s


8000x8000x8000	0.501842 s	2040.482694 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.107093195 s


8000x8000x8000	1.107093 s	924.944715 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.496967933 s


8000x8000x8000	0.496968 s	2060.495119 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.101577827 s


8000x8000x8000	1.101578 s	929.575718 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.499666620 s


8000x8000x8000	0.499667 s	2049.366436 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.104526240 s


8000x8000x8000	1.104526 s	927.094317 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.496623199 s


8000x8000x8000	0.496623 s	2061.925424 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.327096405 s


8500x8500x8500	1.327096 s	925.516786 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.618454431 s


8500x8500x8500	0.618454 s	1985.999192 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.335530703 s


8500x8500x8500	1.335531 s	919.671856 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.621345770 s


8500x8500x8500	0.621346 s	1976.757643 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.336993404 s


8500x8500x8500	1.336993 s	918.665714 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.627278807 s


8500x8500x8500	0.627279 s	1958.060732 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.338386356 s


8500x8500x8500	1.338386 s	917.709594 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.621843432 s


8500x8500x8500	0.621843 s	1975.175642 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.334316922 s


8500x8500x8500	1.334317 s	920.508449 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.623657334 s


8500x8500x8500	0.623657 s	1969.430861 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.514521678 s


9000x9000x9000	1.514522 s	962.680179 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.734887644 s


9000x9000x9000	0.734888 s	1983.976751 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.516843224 s


9000x9000x9000	1.516843 s	961.206786 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.732932098 s


9000x9000x9000	0.732932 s	1989.270226 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.522639952 s


9000x9000x9000	1.522640 s	957.547448 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.735952998 s


9000x9000x9000	0.735953 s	1981.104777 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.528225386 s


9000x9000x9000	1.528225 s	954.047756 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.737801842 s


9000x9000x9000	0.737802 s	1976.140363 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.520805533 s


9000x9000x9000	1.520806 s	958.702456 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.736634428 s


9000x9000x9000	0.736634 s	1979.272139 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.759464203 s


9500x9500x9500	1.759464 s	974.586466 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.845587710 s


9500x9500x9500	0.845588 s	2027.879521 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.751630313 s


9500x9500x9500	1.751630 s	978.945150 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.857191067 s


9500x9500x9500	0.857191 s	2000.429153 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.755491963 s


9500x9500x9500	1.755492 s	976.791712 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.845195110 s


9500x9500x9500	0.845195 s	2028.821487 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.763286098 s


9500x9500x9500	1.763286 s	972.474065 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.843095331 s


9500x9500x9500	0.843095 s	2033.874388 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.755242041 s


9500x9500x9500	1.755242 s	976.930794 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.841014528 s


9500x9500x9500	0.841015 s	2038.906515 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.36155926 s


10000x10000x10000	2.036156 s	982.243047 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.973316583 s


10000x10000x10000	0.973317 s	2054.829883 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.17296522 s


10000x10000x10000	2.017297 s	991.425890 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.972203539 s


10000x10000x10000	0.972204 s	2057.182390 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.18384399 s


10000x10000x10000	2.018384 s	990.891527 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.971150459 s


10000x10000x10000	0.971150 s	2059.413123 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.34800325 s


10000x10000x10000	2.034800 s	982.897425 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.972707606 s


10000x10000x10000	0.972708 s	2056.116337 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.26163587 s


10000x10000x10000	2.026164 s	987.087130 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.972102879 s


10000x10000x10000	0.972103 s	2057.395409 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.419699955 s


10500x10500x10500	2.419700 s	956.833510 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.112217963 s


10500x10500x10500	1.112218 s	2081.651328 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.384473368 s


10500x10500x10500	2.384473 s	970.969117 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.110795699 s


10500x10500x10500	1.110796 s	2084.316677 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.422916644 s


10500x10500x10500	2.422917 s	955.563208 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.113126811 s


10500x10500x10500	1.113127 s	2079.951697 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.377803345 s


10500x10500x10500	2.377803 s	973.692801 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.113756474 s


10500x10500x10500	1.113756 s	2078.775795 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.417855947 s


10500x10500x10500	2.417856 s	957.563251 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.109356942 s


10500x10500x10500	1.109357 s	2087.019887 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.285711276 s


11000x11000x11000	3.285711 s	810.174655 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.251911563 s


11000x11000x11000	1.251912 s	2126.348281 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.10469740 s


11000x11000x11000	3.010470 s	884.247387 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.243265404 s


11000x11000x11000	1.243265 s	2141.135747 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.292535110 s


11000x11000x11000	3.292535 s	808.495555 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.242747501 s


11000x11000x11000	1.242748 s	2142.028045 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.748299059 s


11000x11000x11000	2.748299 s	968.599102 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.245184554 s


11000x11000x11000	1.245185 s	2137.835706 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.296186915 s


11000x11000x11000	3.296187 s	807.599832 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.235734075 s


11000x11000x11000	1.235734 s	2154.185155 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.845557580 s


11500x11500x11500	2.845558 s	1068.946916 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.397190538 s


11500x11500x11500	1.397191 s	2177.047380 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.861541244 s


11500x11500x11500	2.861541 s	1062.976117 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.410633473 s


11500x11500x11500	1.410633 s	2156.300739 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.965603910 s


11500x11500x11500	2.965604 s	1025.676419 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.395322583 s


11500x11500x11500	1.395323 s	2179.961850 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.189792487 s


11500x11500x11500	3.189792 s	953.588678 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.404775468 s


11500x11500x11500	1.404775 s	2165.292653 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.927736153 s


11500x11500x11500	2.927736 s	1038.942665 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.419443109 s


11500x11500x11500	1.419443 s	2142.917867 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.125873779 s


12000x12000x12000	3.125874 s	1105.610861 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.636425019 s


12000x12000x12000	1.636425 s	2111.920778 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.179009091 s


12000x12000x12000	3.179009 s	1087.131210 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.629659525 s


12000x12000x12000	1.629660 s	2120.688369 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.131645238 s


12000x12000x12000	3.131645 s	1103.573278 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.633973638 s


12000x12000x12000	1.633974 s	2115.089203 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.632459399 s


12000x12000x12000	3.632459 s	951.421508 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.635951146 s


12000x12000x12000	1.635951 s	2112.532522 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.596145677 s


12000x12000x12000	3.596146 s	961.028921 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.641659169 s


12000x12000x12000	1.641659 s	2105.187280 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.87193674 s


12500x12500x12500	4.087194 s	955.729117 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.883966918 s


12500x12500x12500	1.883967 s	2073.417512 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.971140423 s


12500x12500x12500	3.971140 s	983.659499 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.895554225 s


12500x12500x12500	1.895554 s	2060.742947 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.1427393 s


12500x12500x12500	4.001427 s	976.214140 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.887993641 s


12500x12500x12500	1.887994 s	2068.995316 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.497920681 s


12500x12500x12500	3.497921 s	1116.734871 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.888241581 s


12500x12500x12500	1.888242 s	2068.723642 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.90605277 s


12500x12500x12500	4.090605 s	954.932030 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.894159534 s


12500x12500x12500	1.894160 s	2062.260295 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.397939267 s


13000x13000x13000	4.397939 s	999.104293 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.218199158 s


13000x13000x13000	2.218199 s	1980.886154 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.447623349 s


13000x13000x13000	4.447623 s	987.943370 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.229773800 s


13000x13000x13000	2.229774 s	1970.603476 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.501879538 s


13000x13000x13000	4.501880 s	976.036778 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.215502224 s


13000x13000x13000	2.215502 s	1983.297490 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.473532411 s


13000x13000x13000	4.473532 s	982.221564 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.233676789 s


13000x13000x13000	2.233677 s	1967.160165 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.479509255 s


13000x13000x13000	4.479509 s	980.911022 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.217549244 s


13000x13000x13000	2.217549 s	1981.466708 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.86472899 s


13500x13500x13500	5.086473 s	967.418897 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.535722412 s


13500x13500x13500	2.535722 s	1940.571246 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.98057474 s


13500x13500x13500	5.098057 s	965.220582 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.525866645 s


13500x13500x13500	2.525867 s	1948.143228 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.88576758 s


13500x13500x13500	5.088577 s	967.018920 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.521475897 s


13500x13500x13500	2.521476 s	1951.535609 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.77907985 s


13500x13500x13500	5.077908 s	969.050643 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.411628177 s


13500x13500x13500	2.411628 s	2040.426483 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.106602418 s


13500x13500x13500	5.106602 s	963.605465 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.560148147 s


13500x13500x13500	2.560148 s	1922.056739 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.685568453 s


14000x14000x14000	5.685568 s	965.250888 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.570996721 s


14000x14000x14000	2.570997 s	2134.580708 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.670014389 s


14000x14000x14000	5.670014 s	967.898778 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.866492315 s


14000x14000x14000	2.866492 s	1914.535047 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.699542115 s


14000x14000x14000	5.699542 s	962.884367 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.645082056 s


14000x14000x14000	2.645082 s	2074.793857 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.681079688 s


14000x14000x14000	5.681080 s	966.013558 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.898510009 s


14000x14000x14000	2.898510 s	1893.386596 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.668572894 s


14000x14000x14000	5.668573 s	968.144911 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.879068329 s


14000x14000x14000	2.879068 s	1906.172196 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.360224466 s


14500x14500x14500	6.360224 s	958.653273 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.230167927 s


14500x14500x14500	3.230168 s	1887.595363 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.300424350 s


14500x14500x14500	6.300424 s	967.752275 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.230569760 s


14500x14500x14500	3.230570 s	1887.360575 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.321875801 s


14500x14500x14500	6.321876 s	964.468489 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.219973918 s


14500x14500x14500	3.219974 s	1893.571239 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.366771566 s


14500x14500x14500	6.366772 s	957.667467 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.222335981 s


14500x14500x14500	3.222336 s	1892.183198 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.308185713 s


14500x14500x14500	6.308186 s	966.561588 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.213726452 s


14500x14500x14500	3.213726 s	1897.252330 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.2552224 s


15000x15000x15000	7.002552 s	963.934261 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.540524119 s


15000x15000x15000	3.540524 s	1906.497392 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.984546044 s


15000x15000x15000	6.984546 s	966.419286 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.555166132 s


15000x15000x15000	3.555166 s	1898.645450 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.156786668 s


15000x15000x15000	7.156787 s	943.160711 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.527649090 s


15000x15000x15000	3.527649 s	1913.455627 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.984903587 s


15000x15000x15000	6.984904 s	966.369817 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.533067976 s


15000x15000x15000	3.533068 s	1910.520841 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.979015507 s


15000x15000x15000	6.979016 s	967.185127 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.564098043 s


15000x15000x15000	3.564098 s	1893.887295 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.894347041 s


15500x15500x15500	7.894347 s	943.428248 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.118957209 s


15500x15500x15500	4.118957 s	1808.163965 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.918971585 s


15500x15500x15500	7.918972 s	940.494598 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.151621099 s


15500x15500x15500	4.151621 s	1793.937795 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.924195289 s


15500x15500x15500	7.924195 s	939.874615 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.510212030 s


15500x15500x15500	3.510212 s	2121.737928 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.908150082 s


15500x15500x15500	7.908150 s	941.781570 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.828151977 s


15500x15500x15500	3.828152 s	1945.520984 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.891420041 s


15500x15500x15500	7.891420 s	943.778174 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.761607035 s


15500x15500x15500	3.761607 s	1979.938343 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.687144818 s


16000x16000x16000	8.687145 s	943.002583 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.183460742 s


16000x16000x16000	4.183461 s	1958.187373 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.701483037 s


16000x16000x16000	8.701483 s	941.448712 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.272377509 s


16000x16000x16000	4.272378 s	1917.433556 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.677586524 s


16000x16000x16000	8.677587 s	944.041293 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.247954161 s


16000x16000x16000	4.247954 s	1928.457721 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.662266816 s


16000x16000x16000	8.662267 s	945.710883 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.947563051 s


16000x16000x16000	3.947563 s	2075.204346 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.664646923 s


16000x16000x16000	8.664647 s	945.451104 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.308651354 s


16000x16000x16000	4.308651 s	1901.290990 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.570116458 s


16500x16500x16500	9.570116 s	938.781679 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.85615955 s


16500x16500x16500	5.085616 s	1766.600168 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.553179028 s


16500x16500x16500	9.553179 s	940.446104 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.95948745 s


16500x16500x16500	5.095949 s	1763.018125 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.566230641 s


16500x16500x16500	9.566231 s	939.163014 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.77036612 s


16500x16500x16500	5.077037 s	1769.585427 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.886529487 s


16500x16500x16500	8.886529 s	1010.996477 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.54434029 s


16500x16500x16500	5.054434 s	1777.498717 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.559953803 s


16500x16500x16500	9.559954 s	939.779646 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.74130709 s


16500x16500x16500	5.074131 s	1770.598850 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.463241406 s


17000x17000x17000	9.463241 s	1038.333440 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.404239535 s


17000x17000x17000	5.404240 s	1818.202161 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.557007022 s


17000x17000x17000	9.557007 s	1028.146153 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.428657225 s


17000x17000x17000	5.428657 s	1810.024025 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.999727446 s


17000x17000x17000	9.999727 s	982.626782 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.417568832 s


17000x17000x17000	5.417569 s	1813.728686 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.801893285 s


17000x17000x17000	9.801893 s	1002.459394 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.397604607 s


17000x17000x17000	5.397605 s	1820.437160 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.556615015 s


17000x17000x17000	9.556615 s	1028.188327 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.439264018 s


17000x17000x17000	5.439264 s	1806.494402 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.940768803 s


17500x17500x17500	10.940769 s	979.707203 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.785665251 s


17500x17500x17500	5.785665 s	1852.639158 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.766352682 s


17500x17500x17500	10.766353 s	995.578569 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.728455548 s


17500x17500x17500	5.728456 s	1871.141342 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.931128162 s


17500x17500x17500	10.931128 s	980.571249 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.677662541 s


17500x17500x17500	5.677663 s	1887.880782 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.935710760 s


17500x17500x17500	10.935711 s	980.160342 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.686127831 s


17500x17500x17500	5.686128 s	1885.070178 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.793958854 s


17500x17500x17500	10.793959 s	993.032320 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.709736086 s


17500x17500x17500	5.709736 s	1877.275909 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.642748898 s


18000x18000x18000	11.642749 s	1001.825265 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.98096004 s


18000x18000x18000	6.098096 s	1912.728168 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.43467238 s


18000x18000x18000	12.043467 s	968.491861 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.985634720 s


18000x18000x18000	5.985635 s	1948.665521 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.923414586 s


18000x18000x18000	11.923415 s	978.243264 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.82038701 s


18000x18000x18000	6.082039 s	1917.777997 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.806957087 s


18000x18000x18000	10.806957 s	1079.304739 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.85770976 s


18000x18000x18000	6.085771 s	1916.601865 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.954980135 s


18000x18000x18000	11.954980 s	975.660341 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.86542607 s


18000x18000x18000	6.086543 s	1916.358884 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.167923889 s


18500x18500x18500	13.167924 s	961.673997 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.987272100 s


18500x18500x18500	5.987272 s	2115.028311 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.277917360 s


18500x18500x18500	13.277917 s	953.707547 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.485924061 s


18500x18500x18500	6.485924 s	1952.420331 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.325017146 s


18500x18500x18500	13.325017 s	950.336488 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.619728044 s


18500x18500x18500	6.619728 s	1912.956230 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.892063543 s


18500x18500x18500	11.892064 s	1064.848834 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.496239915 s


18500x18500x18500	6.496240 s	1949.319940 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.625072126 s


18500x18500x18500	11.625072 s	1089.305069 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.638752869 s


18500x18500x18500	6.638753 s	1907.474227 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.810167852 s


19000x19000x19000	12.810168 s	1070.868092 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.705072925 s


19000x19000x19000	6.705073 s	2045.913617 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.901561428 s


19000x19000x19000	12.901561 s	1063.282152 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.694138934 s


19000x19000x19000	6.694139 s	2049.255346 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.937817935 s


19000x19000x19000	12.937818 s	1060.302446 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.671066820 s


19000x19000x19000	6.671067 s	2056.342766 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.570268934 s


19000x19000x19000	12.570269 s	1091.305212 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.45738815 s


19000x19000x19000	7.045739 s	1946.992411 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.755017090 s


19000x19000x19000	12.755017 s	1075.498363 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.669465051 s


19000x19000x19000	6.669465 s	2056.836627 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.516165509 s


19500x19500x19500	14.516166 s	1021.602433 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.510862295 s


19500x19500x19500	7.510862 s	1974.440406 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.621437065 s


19500x19500x19500	13.621437 s	1088.706715 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.490115716 s


19500x19500x19500	7.490116 s	1979.909331 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.339388912 s


19500x19500x19500	14.339389 s	1034.196791 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.516278056 s


19500x19500x19500	7.516278 s	1973.017748 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.984852953 s


19500x19500x19500	13.984853 s	1060.415154 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.127217948 s


19500x19500x19500	7.127218 s	2080.720712 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.504921886 s


19500x19500x19500	14.504922 s	1022.394337 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.581858198 s


19500x19500x19500	7.581858 s	1955.951907 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 15.749954923 s


20000x20000x20000	15.749955 s	1015.875923 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.937201481 s


20000x20000x20000	7.937201 s	2015.823844 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 15.728319576 s


20000x20000x20000	15.728320 s	1017.273328 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.90354386 s


20000x20000x20000	8.090354 s	1977.663677 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 15.661157244 s


20000x20000x20000	15.661157 s	1021.635870 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.175693657 s


20000x20000x20000	8.175694 s	1957.020489 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 15.423696100 s


20000x20000x20000	15.423696 s	1037.364838 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.702957144 s


20000x20000x20000	7.702957 s	2077.124369 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 15.135199265 s


20000x20000x20000	15.135199 s	1057.138378 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.828472350 s


20000x20000x20000	7.828472 s	2043.821487 GFLOPS
Results saved to blis_f.csv
Execution finished for close allocation
Running BLIS (spread)... results in /u/dssc/msmaddi/HPC/Exe2/fixed_cores/EPYC/spread_cores
make: Nothing to be done for 'double'.
make: Nothing to be done for 'float'.
BLIS files compiled

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.24851107 s


2000x2000x2000	0.024851 s	643.834498 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.13873522 s


2000x2000x2000	0.013874 s	1153.276003 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.22842850 s


2000x2000x2000	0.022843 s	700.437993 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.14329950 s


2000x2000x2000	0.014330 s	1116.542626 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.22092991 s


2000x2000x2000	0.022093 s	724.211584 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.14117781 s


2000x2000x2000	0.014118 s	1133.322581 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.23123749 s


2000x2000x2000	0.023124 s	691.929323 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.14558179 s


2000x2000x2000	0.014558 s	1099.038554 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.21267497 s


2000x2000x2000	0.021267 s	752.321724 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.14103013 s


2000x2000x2000	0.014103 s	1134.509342 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.33501074 s


2500x2500x2500	0.033501 s	932.805915 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.20409203 s


2500x2500x2500	0.020409 s	1531.171991 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.33688228 s


2500x2500x2500	0.033688 s	927.623738 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.21371053 s


2500x2500x2500	0.021371 s	1462.258317 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.35337629 s


2500x2500x2500	0.035338 s	884.326450 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.21051561 s


2500x2500x2500	0.021052 s	1484.450488 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.33455328 s


2500x2500x2500	0.033455 s	934.081411 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.20662369 s


2500x2500x2500	0.020662 s	1512.411283 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.33970917 s


2500x2500x2500	0.033971 s	919.904517 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.21842439 s


2500x2500x2500	0.021842 s	1430.701031 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.50204809 s


3000x3000x3000	0.050205 s	1075.594173 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.29968241 s


3000x3000x3000	0.029968 s	1801.907559 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.49435434 s


3000x3000x3000	0.049435 s	1092.333892 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.29477077 s


3000x3000x3000	0.029477 s	1831.931979 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.50071388 s


3000x3000x3000	0.050071 s	1078.460218 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.29478679 s


3000x3000x3000	0.029479 s	1831.832424 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.49672557 s


3000x3000x3000	0.049673 s	1087.119393 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.30153008 s


3000x3000x3000	0.030153 s	1790.866105 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.50813284 s


3000x3000x3000	0.050813 s	1062.714230 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.29722730 s


3000x3000x3000	0.029723 s	1816.791392 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.70013732 s


3500x3500x3500	0.070014 s	1224.759737 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.39969770 s


3500x3500x3500	0.039970 s	2145.371364 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.71437603 s


3500x3500x3500	0.071438 s	1200.348226 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.41191618 s


3500x3500x3500	0.041192 s	2081.734201 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.69022297 s


3500x3500x3500	0.069022 s	1242.352163 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.39759055 s


3500x3500x3500	0.039759 s	2156.741401 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.69609763 s


3500x3500x3500	0.069610 s	1231.867432 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.41874053 s


3500x3500x3500	0.041874 s	2047.807505 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.69325378 s


3500x3500x3500	0.069325 s	1236.920771 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.40501099 s


3500x3500x3500	0.040501 s	2117.226498 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.93769480 s


4000x4000x4000	0.093769 s	1365.049694 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.53718447 s


4000x4000x4000	0.053718 s	2382.794127 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.93566698 s


4000x4000x4000	0.093567 s	1368.008092 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.53336420 s


4000x4000x4000	0.053336 s	2399.861108 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.96152682 s


4000x4000x4000	0.096153 s	1331.216117 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.53070689 s


4000x4000x4000	0.053071 s	2411.877487 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.93206221 s


4000x4000x4000	0.093206 s	1373.298892 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.53395300 s


4000x4000x4000	0.053395 s	2397.214736 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.94521954 s


4000x4000x4000	0.094522 s	1354.182754 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.53947998 s


4000x4000x4000	0.053948 s	2372.655237 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.145568088 s


4500x4500x4500	0.145568 s	1251.991439 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.66920345 s


4500x4500x4500	0.066920 s	2723.387036 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.140974276 s


4500x4500x4500	0.140974 s	1292.789048 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.68248203 s


4500x4500x4500	0.068248 s	2670.399981 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.142274112 s


4500x4500x4500	0.142274 s	1280.977948 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.68679462 s


4500x4500x4500	0.068679 s	2653.631736 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.137756314 s


4500x4500x4500	0.137756 s	1322.988360 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.69038088 s


4500x4500x4500	0.069038 s	2639.847152 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.141257850 s


4500x4500x4500	0.141258 s	1290.193784 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.68170447 s


4500x4500x4500	0.068170 s	2673.445870 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.221196147 s


5000x5000x5000	0.221196 s	1130.218602 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.84002282 s


5000x5000x5000	0.084002 s	2976.109625 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.224360953 s


5000x5000x5000	0.224361 s	1114.275887 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.84795755 s


5000x5000x5000	0.084796 s	2948.260794 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.224751493 s


5000x5000x5000	0.224751 s	1112.339663 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.85043110 s


5000x5000x5000	0.085043 s	2939.685531 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.223270918 s


5000x5000x5000	0.223271 s	1119.715914 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.84731752 s


5000x5000x5000	0.084732 s	2950.487794 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.222848024 s


5000x5000x5000	0.222848 s	1121.840775 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.83776308 s


5000x5000x5000	0.083776 s	2984.137234 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.342850329 s


5500x5500x5500	0.342850 s	970.540122 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.106134534 s


5500x5500x5500	0.106135 s	3135.171819 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.341464702 s


5500x5500x5500	0.341465 s	974.478469 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.105920872 s


5500x5500x5500	0.105921 s	3141.496041 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.341556315 s


5500x5500x5500	0.341556 s	974.217092 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.107833691 s


5500x5500x5500	0.107834 s	3085.770290 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.343926783 s


5500x5500x5500	0.343927 s	967.502435 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.106092495 s


5500x5500x5500	0.106092 s	3136.414126 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.341416492 s


5500x5500x5500	0.341416 s	974.616071 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.105737899 s


5500x5500x5500	0.105738 s	3146.932208 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.459104645 s


6000x6000x6000	0.459105 s	940.961946 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.133147477 s


6000x6000x6000	0.133147 s	3244.522613 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.461953532 s


6000x6000x6000	0.461954 s	935.158993 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.132360787 s


6000x6000x6000	0.132361 s	3263.806523 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.461283644 s


6000x6000x6000	0.461284 s	936.517055 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.130809299 s


6000x6000x6000	0.130809 s	3302.517507 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.463117371 s


6000x6000x6000	0.463117 s	932.808888 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.131566004 s


6000x6000x6000	0.131566 s	3283.522999 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.459339516 s


6000x6000x6000	0.459340 s	940.480810 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.132241195 s


6000x6000x6000	0.132241 s	3266.758138 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.597086251 s


6500x6500x6500	0.597086 s	919.883851 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.174055261 s


6500x6500x6500	0.174055 s	3155.607000 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.598697864 s


6500x6500x6500	0.598698 s	917.407649 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.172868418 s


6500x6500x6500	0.172868 s	3177.272091 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.601940472 s


6500x6500x6500	0.601940 s	912.465643 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.174862879 s


6500x6500x6500	0.174863 s	3141.032580 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.598814805 s


6500x6500x6500	0.598815 s	917.228491 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.173686276 s


6500x6500x6500	0.173686 s	3162.310878 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.674843969 s


6500x6500x6500	0.674844 s	813.891841 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.174701728 s


6500x6500x6500	0.174702 s	3143.929979 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.748201981 s


7000x7000x7000	0.748202 s	916.864720 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.248939152 s


7000x7000x7000	0.248939 s	2755.693488 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.750301740 s


7000x7000x7000	0.750302 s	914.298826 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.245457104 s


7000x7000x7000	0.245457 s	2794.785683 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.741186979 s


7000x7000x7000	0.741187 s	925.542433 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.261591130 s


7000x7000x7000	0.261591 s	2622.413076 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.753833644 s


7000x7000x7000	0.753834 s	910.015101 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.259799909 s


7000x7000x7000	0.259800 s	2640.493612 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.749852204 s


7000x7000x7000	0.749852 s	914.846948 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.262851709 s


7000x7000x7000	0.262852 s	2609.836560 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.914364382 s


7500x7500x7500	0.914364 s	922.772165 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.361365940 s


7500x7500x7500	0.361366 s	2334.890776 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.912283715 s


7500x7500x7500	0.912284 s	924.876753 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.361461089 s


7500x7500x7500	0.361461 s	2334.276152 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.909072635 s


7500x7500x7500	0.909073 s	928.143657 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.358969734 s


7500x7500x7500	0.358970 s	2350.476712 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.916931195 s


7500x7500x7500	0.916931 s	920.189001 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.358578319 s


7500x7500x7500	0.358578 s	2353.042433 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.914502217 s


7500x7500x7500	0.914502 s	922.633083 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.355887399 s


7500x7500x7500	0.355887 s	2370.834153 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.103753276 s


8000x8000x8000	1.103753 s	927.743566 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.498419265 s


8000x8000x8000	0.498419 s	2054.495225 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.103287069 s


8000x8000x8000	1.103287 s	928.135595 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.496773607 s


8000x8000x8000	0.496774 s	2061.301135 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.102143119 s


8000x8000x8000	1.102143 s	929.098937 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.498604169 s


8000x8000x8000	0.498604 s	2053.733329 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.102256080 s


8000x8000x8000	1.102256 s	929.003721 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.493984572 s


8000x8000x8000	0.493985 s	2072.939233 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.104300955 s


8000x8000x8000	1.104301 s	927.283451 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.499554320 s


8000x8000x8000	0.499554 s	2049.827134 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.333627736 s


8500x8500x8500	1.333628 s	920.984145 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.624445005 s


8500x8500x8500	0.624445 s	1966.946633 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.330649391 s


8500x8500x8500	1.330649 s	923.045551 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.617720763 s


8500x8500x8500	0.617721 s	1988.357966 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.324625362 s


8500x8500x8500	1.324625 s	927.243306 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.623149308 s


8500x8500x8500	0.623149 s	1971.036450 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.335506136 s


8500x8500x8500	1.335506 s	919.688773 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.625810614 s


8500x8500x8500	0.625811 s	1962.654472 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.331308103 s


8500x8500x8500	1.331308 s	922.588841 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.622456048 s


8500x8500x8500	0.622456 s	1973.231691 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.514062766 s


9000x9000x9000	1.514063 s	962.971967 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.736070883 s


9000x9000x9000	0.736071 s	1980.787494 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.535995681 s


9000x9000x9000	1.535996 s	949.221419 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.737001544 s


9000x9000x9000	0.737002 s	1978.286222 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.526292177 s


9000x9000x9000	1.526292 s	955.256157 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.734172764 s


9000x9000x9000	0.734173 s	1985.908592 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.528067529 s


9000x9000x9000	1.528068 s	954.146314 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.733845729 s


9000x9000x9000	0.733846 s	1986.793603 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.523850878 s


9000x9000x9000	1.523851 s	956.786534 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.737051740 s


9000x9000x9000	0.737052 s	1978.151493 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.756342835 s


9500x9500x9500	1.756343 s	976.318499 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.839931180 s


9500x9500x9500	0.839931 s	2041.536308 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.757806379 s


9500x9500x9500	1.757806 s	975.505619 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.854350211 s


9500x9500x9500	0.854350 s	2007.080911 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.767577744 s


9500x9500x9500	1.767578 s	970.112916 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.852995373 s


9500x9500x9500	0.852995 s	2010.268818 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.759514611 s


9500x9500x9500	1.759515 s	974.558545 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.844997068 s


9500x9500x9500	0.844997 s	2029.296982 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.754634171 s


9500x9500x9500	1.754634 s	977.269238 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.840385798 s


9500x9500x9500	0.840386 s	2040.431911 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.50944754 s


10000x10000x10000	2.050945 s	975.160348 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.970727302 s


10000x10000x10000	0.970727 s	2060.310858 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.18403581 s


10000x10000x10000	2.018404 s	990.882110 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.974310954 s


10000x10000x10000	0.974311 s	2052.732746 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.41598696 s


10000x10000x10000	2.041599 s	979.624450 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.972762441 s


10000x10000x10000	0.972762 s	2056.000433 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.40210584 s


10000x10000x10000	2.040211 s	980.290964 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.975456478 s


10000x10000x10000	0.975456 s	2050.322126 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.55473992 s


10000x10000x10000	2.055474 s	973.011582 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.971045359 s


10000x10000x10000	0.971045 s	2059.636022 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.416457006 s


10500x10500x10500	2.416457 s	958.117605 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.112002805 s


10500x10500x10500	1.112003 s	2082.054101 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.377597395 s


10500x10500x10500	2.377597 s	973.777144 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.115665534 s


10500x10500x10500	1.115666 s	2075.218719 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.392809658 s


10500x10500x10500	2.392810 s	967.586365 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.111756931 s


10500x10500x10500	1.111757 s	2082.514564 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.372911773 s


10500x10500x10500	2.372912 s	975.699993 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.108511076 s


10500x10500x10500	1.108511 s	2088.612419 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.419276147 s


10500x10500x10500	2.419276 s	957.001127 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.129029838 s


10500x10500x10500	1.129030 s	2050.654396 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.836786041 s


11000x11000x11000	2.836786 s	938.385892 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.242035249 s


11000x11000x11000	1.242035 s	2143.256403 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.946603559 s


11000x11000x11000	2.946604 s	903.413013 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.246444772 s


11000x11000x11000	1.246445 s	2135.674247 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.944542557 s


11000x11000x11000	2.944543 s	904.045348 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.243752870 s


11000x11000x11000	1.243753 s	2140.296569 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.272205169 s


11000x11000x11000	3.272205 s	813.518671 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.244295137 s


11000x11000x11000	1.244295 s	2139.363822 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.332018597 s


11000x11000x11000	3.332019 s	798.915109 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.251037080 s


11000x11000x11000	1.251037 s	2127.834612 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.904347760 s


11500x11500x11500	2.904348 s	1047.309156 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.396911280 s


11500x11500x11500	1.396911 s	2177.482596 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.974639233 s


11500x11500x11500	2.974639 s	1022.560977 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.404170243 s


11500x11500x11500	1.404170 s	2166.225937 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.918417008 s


11500x11500x11500	2.918417 s	1042.260236 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.398858751 s


11500x11500x11500	1.398859 s	2174.451136 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.854996840 s


11500x11500x11500	2.854997 s	1065.412738 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.398272050 s


11500x11500x11500	1.398272 s	2175.363514 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.973835361 s


11500x11500x11500	2.973835 s	1022.837390 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.394808873 s


11500x11500x11500	1.394809 s	2180.764733 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.288219319 s


12000x12000x12000	3.288219 s	1051.024784 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.624489685 s


12000x12000x12000	1.624490 s	2127.437331 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.259629855 s


12000x12000x12000	3.259630 s	1060.243081 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.672286846 s


12000x12000x12000	1.672287 s	2066.631098 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.582006524 s


12000x12000x12000	3.582007 s	964.822363 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.632731109 s


12000x12000x12000	1.632731 s	2116.698813 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.611393343 s


12000x12000x12000	3.611393 s	956.971360 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.634471704 s


12000x12000x12000	1.634472 s	2114.444681 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.597992294 s


12000x12000x12000	3.597992 s	960.535687 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.637250591 s


12000x12000x12000	1.637251 s	2110.855857 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.26175837 s


12500x12500x12500	4.026176 s	970.213463 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.870886032 s


12500x12500x12500	1.870886 s	2087.914460 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.507718527 s


12500x12500x12500	3.507719 s	1113.615579 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.878110932 s


12500x12500x12500	1.878111 s	2079.882468 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.56041150 s


12500x12500x12500	4.056041 s	963.069618 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.892361721 s


12500x12500x12500	1.892362 s	2064.219518 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.521806638 s


12500x12500x12500	3.521807 s	1109.160837 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.881805104 s


12500x12500x12500	1.881805 s	2075.799450 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.46433434 s


12500x12500x12500	4.046433 s	965.356298 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.895357787 s


12500x12500x12500	1.895358 s	2060.956526 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.463734809 s


13000x13000x13000	4.463735 s	984.377475 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.230949513 s


13000x13000x13000	2.230950 s	1969.564965 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.440417094 s


13000x13000x13000	4.440417 s	989.546682 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.210476199 s


13000x13000x13000	2.210476 s	1987.806972 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.430031466 s


13000x13000x13000	4.430031 s	991.866544 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.230277819 s


13000x13000x13000	2.230278 s	1970.158140 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.606543431 s


13000x13000x13000	4.606543 s	953.860539 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.239135652 s


13000x13000x13000	2.239136 s	1962.364360 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.347531252 s


13000x13000x13000	4.347531 s	1010.688537 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.217928187 s


13000x13000x13000	2.217928 s	1981.128165 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.104875416 s


13500x13500x13500	5.104875 s	963.931457 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.518494597 s


13500x13500x13500	2.518495 s	1953.845764 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.100860250 s


13500x13500x13500	5.100860 s	964.690221 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.500761818 s


13500x13500x13500	2.500762 s	1967.700388 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.128125280 s


13500x13500x13500	5.128125 s	959.561191 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.537767180 s


13500x13500x13500	2.537767 s	1939.007659 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.97871498 s


13500x13500x13500	5.097871 s	965.255794 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.512235091 s


13500x13500x13500	2.512235 s	1958.713982 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.91192354 s


13500x13500x13500	5.091192 s	966.522115 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.520773744 s


13500x13500x13500	2.520774 s	1952.079203 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.692189315 s


14000x14000x14000	5.692189 s	964.128158 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.596562533 s


14000x14000x14000	2.596563 s	2113.563579 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.683678035 s


14000x14000x14000	5.683678 s	965.571935 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.844275938 s


14000x14000x14000	2.844276 s	1929.489304 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.686739988 s


14000x14000x14000	5.686740 s	965.052035 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.650973017 s


14000x14000x14000	2.650973 s	2070.183274 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.687694509 s


14000x14000x14000	5.687695 s	964.890078 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.832091664 s


14000x14000x14000	2.832092 s	1937.790386 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.668077512 s


14000x14000x14000	5.668078 s	968.229526 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.590970631 s


14000x14000x14000	2.590971 s	2118.125128 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.302012841 s


14500x14500x14500	6.302013 s	967.508343 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.216186416 s


14500x14500x14500	3.216186 s	1895.801179 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.304992758 s


14500x14500x14500	6.304993 s	967.051071 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.227912674 s


14500x14500x14500	3.227913 s	1888.914173 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.269537665 s


14500x14500x14500	6.269538 s	972.519877 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.225650761 s


14500x14500x14500	3.225651 s	1890.238731 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.309190497 s


14500x14500x14500	6.309190 s	966.407656 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.234890845 s


14500x14500x14500	3.234891 s	1884.839487 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.307186945 s


14500x14500x14500	6.307187 s	966.714647 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14500x14500) and matrix B(14500x14500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.244035011 s


14500x14500x14500	3.244035 s	1879.526571 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.975005972 s


15000x15000x15000	6.975006 s	967.741107 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.532585289 s


15000x15000x15000	3.532585 s	1910.781891 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.1716361 s


15000x15000x15000	7.001716 s	964.049335 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.522869200 s


15000x15000x15000	3.522869 s	1916.051836 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.191675383 s


15000x15000x15000	7.191675 s	938.585189 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.544827273 s


15000x15000x15000	3.544827 s	1904.183048 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.974713122 s


15000x15000x15000	6.974713 s	967.781740 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.539783155 s


15000x15000x15000	3.539783 s	1906.896469 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.975565874 s


15000x15000x15000	6.975566 s	967.663430 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15000x15000) and matrix B(15000x15000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.533394170 s


15000x15000x15000	3.533394 s	1910.344466 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.929533383 s


15500x15500x15500	7.929533 s	939.241900 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.515480591 s


15500x15500x15500	3.515481 s	2118.558134 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.964340347 s


15500x15500x15500	7.964340 s	935.137083 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.450530583 s


15500x15500x15500	3.450531 s	2158.436165 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.904235059 s


15500x15500x15500	7.904235 s	942.248041 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.834970629 s


15500x15500x15500	3.834971 s	1942.061810 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.947626705 s


15500x15500x15500	7.947627 s	937.103651 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.483424689 s


15500x15500x15500	3.483425 s	2138.053974 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.901077513 s


15500x15500x15500	7.901078 s	942.624596 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(15500x15500) and matrix B(15500x15500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.153974855 s


15500x15500x15500	4.153975 s	1792.921301 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.708789739 s


16000x16000x16000	8.708790 s	940.658834 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.644093734 s


16000x16000x16000	4.644094 s	1763.960951 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.695984385 s


16000x16000x16000	8.695984 s	942.044010 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.650072081 s


16000x16000x16000	4.650072 s	1761.693122 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.702373112 s


16000x16000x16000	8.702373 s	941.352421 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.269943116 s


16000x16000x16000	4.269943 s	1918.526729 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.346273933 s


16000x16000x16000	8.346274 s	981.515832 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.631365838 s


16000x16000x16000	4.631366 s	1768.808660 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.688785136 s


16000x16000x16000	8.688785 s	942.824557 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16000x16000) and matrix B(16000x16000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.262483883 s


16000x16000x16000	4.262484 s	1921.884100 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.612574965 s


16500x16500x16500	9.612575 s	934.635104 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.75856024 s


16500x16500x16500	5.075856 s	1769.997013 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.585090199 s


16500x16500x16500	9.585090 s	937.315123 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.102776077 s


16500x16500x16500	5.102776 s	1760.659269 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.581505357 s


16500x16500x16500	9.581505 s	937.665812 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.37167997 s


16500x16500x16500	5.037168 s	1783.591495 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.611008367 s


16500x16500x16500	9.611008 s	934.787450 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.101013724 s


16500x16500x16500	5.101014 s	1761.267561 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.628012169 s


16500x16500x16500	9.628012 s	933.136544 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(16500x16500) and matrix B(16500x16500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.92066994 s


16500x16500x16500	5.092067 s	1764.362097 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.633457886 s


17000x17000x17000	9.633458 s	1019.986812 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.380712319 s


17000x17000x17000	5.380712 s	1826.152267 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.648337038 s


17000x17000x17000	9.648337 s	1018.413843 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.411955072 s


17000x17000x17000	5.411955 s	1815.610047 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.629273351 s


17000x17000x17000	9.629273 s	1020.430062 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.401075148 s


17000x17000x17000	5.401075 s	1819.267411 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.610481267 s


17000x17000x17000	9.610481 s	1022.425384 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.415784596 s


17000x17000x17000	5.415785 s	1814.326221 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.643632418 s


17000x17000x17000	9.643632 s	1018.910673 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17000x17000) and matrix B(17000x17000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.399118160 s


17000x17000x17000	5.399118 s	1819.926830 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.18621205 s


17500x17500x17500	11.018621 s	972.785052 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.662842765 s


17500x17500x17500	5.662843 s	1892.821405 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.117576071 s


17500x17500x17500	11.117576 s	964.126526 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.777326744 s


17500x17500x17500	5.777327 s	1855.313102 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.905454757 s


17500x17500x17500	10.905455 s	982.879691 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.815764043 s


17500x17500x17500	5.815764 s	1843.051046 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.896464524 s


17500x17500x17500	10.896465 s	983.690625 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.796009817 s


17500x17500x17500	5.796010 s	1849.332616 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.815550555 s


17500x17500x17500	10.815551 s	991.049873 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(17500x17500) and matrix B(17500x17500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.520303594 s


17500x17500x17500	5.520304 s	1941.695745 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.990443203 s


18000x18000x18000	11.990443 s	972.774718 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.93028890 s


18000x18000x18000	6.093029 s	1914.318841 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.10511339 s


18000x18000x18000	12.010511 s	971.149327 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.95344241 s


18000x18000x18000	6.095344 s	1913.591676 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.52916256 s


18000x18000x18000	12.052916 s	967.732601 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.93481581 s


18000x18000x18000	6.093482 s	1914.176624 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.902666933 s


18000x18000x18000	11.902667 s	979.948449 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.982595729 s


18000x18000x18000	5.982596 s	1949.655388 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.949001576 s


18000x18000x18000	11.949002 s	976.148503 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18000x18000) and matrix B(18000x18000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.87404641 s


18000x18000x18000	6.087405 s	1916.087510 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.329100947 s


18500x18500x18500	13.329101 s	950.045322 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.632890022 s


18500x18500x18500	6.632890 s	1909.160254 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.826100320 s


18500x18500x18500	12.826100 s	987.303209 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.633506371 s


18500x18500x18500	6.633506 s	1908.982865 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.686843616 s


18500x18500x18500	12.686844 s	998.140308 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.603062319 s


18500x18500x18500	6.603062 s	1917.784414 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.450532454 s


18500x18500x18500	12.450532 s	1017.085016 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.614547502 s


18500x18500x18500	6.614548 s	1914.454465 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.241784483 s


18500x18500x18500	13.241784 s	956.309931 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(18500x18500) and matrix B(18500x18500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.602553234 s


18500x18500x18500	6.602553 s	1917.932283 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.30472694 s


19000x19000x19000	13.030473 s	1052.763036 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.48830625 s


19000x19000x19000	7.048831 s	1946.138406 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.598172647 s


19000x19000x19000	12.598173 s	1088.888078 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.44306846 s


19000x19000x19000	7.044307 s	1947.388196 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.917636985 s


19000x19000x19000	12.917637 s	1061.958934 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.659716280 s


19000x19000x19000	6.659716 s	2059.847511 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.906431486 s


19000x19000x19000	12.906431 s	1062.880938 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.753480819 s


19000x19000x19000	6.753481 s	2031.248828 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.885600951 s


19000x19000x19000	12.885601 s	1064.599164 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19000x19000) and matrix B(19000x19000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.697338796 s


19000x19000x19000	6.697339 s	2048.276251 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.84485660 s


19500x19500x19500	14.084486 s	1052.913848 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.129654084 s


19500x19500x19500	7.129654 s	2080.009749 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.861298489 s


19500x19500x19500	14.861298 s	997.877138 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.419605322 s


19500x19500x19500	7.419605 s	1998.724913 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.509188736 s


19500x19500x19500	13.509189 s	1097.752818 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.134816292 s


19500x19500x19500	7.134816 s	2078.504813 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.561472890 s


19500x19500x19500	13.561473 s	1093.520602 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.34332158 s


19500x19500x19500	7.034332 s	2108.195869 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.496977529 s


19500x19500x19500	14.496978 s	1022.954610 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(19500x19500) and matrix B(19500x19500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.197672984 s


19500x19500x19500	7.197673 s	2060.353399 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.491512194 s


20000x20000x20000	14.491512 s	1104.094575 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.946978130 s


20000x20000x20000	7.946978 s	2013.343907 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 15.253815351 s


20000x20000x20000	15.253815 s	1048.917902 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.117140698 s


20000x20000x20000	8.117141 s	1971.137448 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 15.651854783 s


20000x20000x20000	15.651855 s	1022.243065 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.240824233 s


20000x20000x20000	8.240824 s	1941.553363 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 15.429151511 s


20000x20000x20000	15.429152 s	1036.998048 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.111689513 s


20000x20000x20000	8.111690 s	1972.462084 GFLOPS
Results saved to blis_f.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 15.178337971 s


20000x20000x20000	15.178338 s	1054.133860 GFLOPS
Results saved to blis_d.csv

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(20000x20000) and matrix B(20000x20000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.303115391 s


20000x20000x20000	8.303115 s	1926.987552 GFLOPS
Results saved to blis_f.csv
Execution finished for spread allocation
