Loading modules...
Modules loaded
Results will be stored in ./fixed_cores/spread_cores

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.332958838 s


2000x2000x2000	0.332959 s	48.053988 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.193761079 s


2000x2000x2000	0.193761 s	82.575923 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.332322783 s


2000x2000x2000	0.332323 s	48.145962 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.165694836 s


2000x2000x2000	0.165695 s	96.563058 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.333769038 s


2000x2000x2000	0.333769 s	47.937340 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.166496681 s


2000x2000x2000	0.166497 s	96.098012 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.332968486 s


2000x2000x2000	0.332968 s	48.052596 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.193205467 s


2000x2000x2000	0.193205 s	82.813392 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.332581359 s


2000x2000x2000	0.332581 s	48.108529 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.179594327 s


2000x2000x2000	0.179594 s	89.089674 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.646111045 s


2500x2500x2500	0.646111 s	48.366299 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.322505355 s


2500x2500x2500	0.322505 s	96.897616 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.645966724 s


2500x2500x2500	0.645967 s	48.377105 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.323542442 s


2500x2500x2500	0.323542 s	96.587019 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.649388187 s


2500x2500x2500	0.649388 s	48.122218 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.324654148 s


2500x2500x2500	0.324654 s	96.256278 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.645983176 s


2500x2500x2500	0.645983 s	48.375873 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.322225941 s


2500x2500x2500	0.322226 s	96.981639 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.646710360 s


2500x2500x2500	0.646710 s	48.321477 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.324217840 s


2500x2500x2500	0.324218 s	96.385813 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.110960415 s


3000x3000x3000	1.110960 s	48.606592 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.558766651 s


3000x3000x3000	0.558767 s	96.641415 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.115122818 s


3000x3000x3000	1.115123 s	48.425159 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.555475343 s


3000x3000x3000	0.555475 s	97.214036 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.112435964 s


3000x3000x3000	1.112436 s	48.542120 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.552847080 s


3000x3000x3000	0.552847 s	97.676196 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.110758326 s


3000x3000x3000	1.110758 s	48.615436 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.553323704 s


3000x3000x3000	0.553324 s	97.592060 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.114958099 s


3000x3000x3000	1.114958 s	48.432313 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.554419772 s


3000x3000x3000	0.554420 s	97.399124 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.774455813 s


3500x3500x3500	1.774456 s	48.324675 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.876491663 s


3500x3500x3500	0.876492 s	97.833218 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.780474280 s


3500x3500x3500	1.780474 s	48.161325 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.875051740 s


3500x3500x3500	0.875052 s	97.994205 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.764711763 s


3500x3500x3500	1.764712 s	48.591505 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.876336503 s


3500x3500x3500	0.876337 s	97.850540 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.780918965 s


3500x3500x3500	1.780919 s	48.149299 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.874484977 s


3500x3500x3500	0.874485 s	98.057717 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.767534121 s


3500x3500x3500	1.767534 s	48.513915 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.876399050 s


3500x3500x3500	0.876399 s	97.843557 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.678662801 s


4000x4000x4000	2.678663 s	47.785037 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.306015012 s


4000x4000x4000	1.306015 s	98.008062 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.639995909 s


4000x4000x4000	2.639996 s	48.484924 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.302841696 s


4000x4000x4000	1.302842 s	98.246779 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.655665622 s


4000x4000x4000	2.655666 s	48.198839 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.302579994 s


4000x4000x4000	1.302580 s	98.266518 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.640649015 s


4000x4000x4000	2.640649 s	48.472932 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.303075594 s


4000x4000x4000	1.303076 s	98.229144 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.668668019 s


4000x4000x4000	2.668668 s	47.964003 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.305707124 s


4000x4000x4000	1.305707 s	98.031172 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.766062149 s


4500x4500x4500	3.766062 s	48.392722 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.870598943 s


4500x4500x4500	1.870599 s	97.428688 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.812027971 s


4500x4500x4500	3.812028 s	47.809198 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.864815628 s


4500x4500x4500	1.864816 s	97.730841 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.794339790 s


4500x4500x4500	3.794340 s	48.032071 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.868430964 s


4500x4500x4500	1.868431 s	97.541736 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.794785736 s


4500x4500x4500	3.794786 s	48.026427 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.868515622 s


4500x4500x4500	1.868516 s	97.537317 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.809560740 s


4500x4500x4500	3.809561 s	47.840161 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.878828180 s


4500x4500x4500	1.878828 s	97.001952 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.237325549 s


5000x5000x5000	5.237326 s	47.734287 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.562313862 s


5000x5000x5000	2.562314 s	97.568063 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.197870939 s


5000x5000x5000	5.197871 s	48.096616 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.563883979 s


5000x5000x5000	2.563884 s	97.508312 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.203618176 s


5000x5000x5000	5.203618 s	48.043494 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.574345527 s


5000x5000x5000	2.574346 s	97.112061 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.165603259 s


5000x5000x5000	5.165603 s	48.397058 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.599124740 s


5000x5000x5000	2.599125 s	96.186226 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.247062717 s


5000x5000x5000	5.247063 s	47.645705 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.595573824 s


5000x5000x5000	2.595574 s	96.317815 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.934512571 s


5500x5500x5500	6.934513 s	47.984627 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.397009570 s


5500x5500x5500	3.397010 s	97.953801 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.873038899 s


5500x5500x5500	6.873039 s	48.413810 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.408458090 s


5500x5500x5500	3.408458 s	97.624788 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.897469958 s


5500x5500x5500	6.897470 s	48.242327 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.409124752 s


5500x5500x5500	3.409125 s	97.605698 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.903436617 s


5500x5500x5500	6.903437 s	48.200631 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.415577297 s


5500x5500x5500	3.415577 s	97.421306 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.888036180 s


5500x5500x5500	6.888036 s	48.308399 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.413190057 s


5500x5500x5500	3.413190 s	97.489444 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.974690785 s


6000x6000x6000	8.974691 s	48.135363 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.422355047 s


6000x6000x6000	4.422355 s	97.685508 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.68444364 s


6000x6000x6000	9.068444 s	47.637719 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.397854145 s


6000x6000x6000	4.397854 s	98.229724 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.944571908 s


6000x6000x6000	8.944572 s	48.297448 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.407412888 s


6000x6000x6000	4.407413 s	98.016685 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.972342968 s


6000x6000x6000	8.972343 s	48.147959 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.409311712 s


6000x6000x6000	4.409312 s	97.974475 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.912698977 s


6000x6000x6000	8.912699 s	48.470166 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.414777201 s


6000x6000x6000	4.414777 s	97.853183 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.360064761 s


6500x6500x6500	11.360065 s	48.349196 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.618801301 s


6500x6500x6500	5.618801 s	97.752166 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.358632602 s


6500x6500x6500	11.358633 s	48.355292 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.600819776 s


6500x6500x6500	5.600820 s	98.066001 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.346138279 s


6500x6500x6500	11.346138 s	48.408541 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.609858684 s


6500x6500x6500	5.609859 s	97.907992 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.432523516 s


6500x6500x6500	11.432524 s	48.042761 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.626319226 s


6500x6500x6500	5.626319 s	97.621549 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 11.390348837 s


6500x6500x6500	11.390349 s	48.220648 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.611401674 s


6500x6500x6500	5.611402 s	97.881070 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.200684308 s


7000x7000x7000	14.200684 s	48.307531 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.988744220 s


7000x7000x7000	6.988744 s	98.157835 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.395852544 s


7000x7000x7000	14.395853 s	47.652614 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.475594 s


7000x7000x7000	7.000476 s	97.993342 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.110096255 s


7000x7000x7000	14.110096 s	48.617670 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.2880299 s


7000x7000x7000	7.002880 s	97.959692 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.269646277 s


7000x7000x7000	14.269646 s	48.074072 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.15017380 s


7000x7000x7000	7.015017 s	97.790207 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.197107720 s


7000x7000x7000	14.197108 s	48.319701 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 7.17131547 s


7000x7000x7000	7.017132 s	97.760744 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.579123458 s


7500x7500x7500	17.579123 s	47.997274 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.606301188 s


7500x7500x7500	8.606301 s	98.038633 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.400008695 s


7500x7500x7500	17.400009 s	48.491355 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.603869163 s


7500x7500x7500	8.603869 s	98.066345 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.655283497 s


7500x7500x7500	17.655283 s	47.790227 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.593849107 s


7500x7500x7500	8.593849 s	98.180686 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.363264695 s


7500x7500x7500	17.363265 s	48.593972 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.601312330 s


7500x7500x7500	8.601312 s	98.095496 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.564019751 s


7500x7500x7500	17.564020 s	48.038548 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.578812223 s


7500x7500x7500	8.578812 s	98.352776 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 21.214063940 s


8000x8000x8000	21.214064 s	48.269865 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.430564484 s


8000x8000x8000	10.430564 s	98.173018 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 21.382292701 s


8000x8000x8000	21.382293 s	47.890094 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.436401762 s


8000x8000x8000	10.436402 s	98.118108 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 21.224543867 s


8000x8000x8000	21.224544 s	48.246031 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.427708975 s


8000x8000x8000	10.427709 s	98.199902 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 21.467382325 s


8000x8000x8000	21.467382 s	47.700273 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.908385072 s


8000x8000x8000	10.908385 s	93.872740 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 21.334726285 s


8000x8000x8000	21.334726 s	47.996866 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.494872603 s


8000x8000x8000	10.494873 s	97.571456 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 25.554327102 s


8500x8500x8500	25.554327 s	48.064267 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.557079328 s


8500x8500x8500	12.557079 s	97.813350 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 25.528275769 s


8500x8500x8500	25.528276 s	48.113316 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.562821731 s


8500x8500x8500	12.562822 s	97.768640 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 25.405450682 s


8500x8500x8500	25.405451 s	48.345924 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.573226692 s


8500x8500x8500	12.573227 s	97.687732 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 25.753561146 s


8500x8500x8500	25.753561 s	47.692433 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.617969113 s


8500x8500x8500	12.617969 s	97.341338 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 26.298365312 s


8500x8500x8500	26.298365 s	46.704424 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.544141278 s


8500x8500x8500	12.544141 s	97.914235 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 30.523865953 s


9000x9000x9000	30.523866 s	47.765902 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.950742568 s


9000x9000x9000	14.950743 s	97.520240 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 30.149892398 s


9000x9000x9000	30.149892 s	48.358382 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.943232775 s


9000x9000x9000	14.943233 s	97.569249 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 30.472017090 s


9000x9000x9000	30.472017 s	47.847177 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.894484064 s


9000x9000x9000	14.894484 s	97.888587 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 31.173580105 s


9000x9000x9000	31.173580 s	46.770374 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.981068545 s


9000x9000x9000	14.981069 s	97.322831 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 30.299350672 s


9000x9000x9000	30.299351 s	48.119843 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 15.26706065 s


9000x9000x9000	15.026706 s	97.027252 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 37.359731890 s


9500x9500x9500	37.359732 s	45.898349 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.527102622 s


9500x9500x9500	17.527103 s	97.834196 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 35.752494347 s


9500x9500x9500	35.752494 s	47.961689 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.531451682 s


9500x9500x9500	17.531452 s	97.809926 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 35.684235297 s


9500x9500x9500	35.684235 s	48.053433 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.533934019 s


9500x9500x9500	17.533934 s	97.796079 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 35.924758490 s


9500x9500x9500	35.924758 s	47.731706 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.529410006 s


9500x9500x9500	17.529410 s	97.821319 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 36.96485050 s


9500x9500x9500	36.096485 s	47.504625 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.515505014 s


9500x9500x9500	17.515505 s	97.898976 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 41.912171946 s


10000x10000x10000	41.912172 s	47.718835 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.476157863 s


10000x10000x10000	20.476158 s	97.674574 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 41.373866324 s


10000x10000x10000	41.373866 s	48.339693 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.515959287 s


10000x10000x10000	20.515959 s	97.485083 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 41.662289880 s


10000x10000x10000	41.662290 s	48.005043 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.612366401 s


10000x10000x10000	20.612366 s	97.029131 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 42.392727796 s


10000x10000x10000	42.392728 s	47.177903 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.453942506 s


10000x10000x10000	20.453943 s	97.780660 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 41.849980977 s


10000x10000x10000	41.849981 s	47.789747 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.542556668 s


10000x10000x10000	20.542557 s	97.358865 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 48.235954079 s


10500x10500x10500	48.235954 s	47.998429 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 23.782470037 s


10500x10500x10500	23.782470 s	97.351116 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 48.283864803 s


10500x10500x10500	48.283865 s	47.950801 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 23.744465518 s


10500x10500x10500	23.744466 s	97.506933 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 50.235120522 s


10500x10500x10500	50.235121 s	46.088274 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 24.564140133 s


10500x10500x10500	24.564140 s	94.253248 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 48.733425720 s


10500x10500x10500	48.733426 s	47.508460 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 23.673019083 s


10500x10500x10500	23.673019 s	97.801214 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 48.580426263 s


10500x10500x10500	48.580426 s	47.658083 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 23.726500288 s


10500x10500x10500	23.726500 s	97.580763 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 57.528341390 s


11000x11000x11000	57.528341 s	46.272845 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 27.228800646 s


11000x11000x11000	27.228801 s	97.764130 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 56.225818510 s


11000x11000x11000	56.225819 s	47.344798 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 27.160799496 s


11000x11000x11000	27.160799 s	98.008897 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 58.97899667 s


11000x11000x11000	58.097900 s	45.819212 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 27.899310650 s


11000x11000x11000	27.899311 s	95.414544 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 58.237329588 s


11000x11000x11000	58.237330 s	45.709513 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 27.397743806 s


11000x11000x11000	27.397744 s	97.161285 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 56.579785967 s


11000x11000x11000	56.579786 s	47.048605 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 27.236384545 s


11000x11000x11000	27.236385 s	97.736908 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 63.86502831 s


11500x11500x11500	63.086503 s	48.215543 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 31.604435462 s


11500x11500x11500	31.604435 s	96.244402 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 65.291351071 s


11500x11500x11500	65.291351 s	46.587334 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 31.192911586 s


11500x11500x11500	31.192912 s	97.514142 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 65.227036316 s


11500x11500x11500	65.227036 s	46.633270 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 32.248797868 s


11500x11500x11500	32.248798 s	94.321345 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 65.304839560 s


11500x11500x11500	65.304840 s	46.577712 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 31.34540318 s


11500x11500x11500	31.034540 s	98.011763 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 63.932853324 s


11500x11500x11500	63.932853 s	47.577260 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 30.979533716 s


11500x11500x11500	30.979534 s	98.185790 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 72.988725364 s


12000x12000x12000	72.988725 s	47.349779 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 35.185868065 s


12000x12000x12000	35.185868 s	98.221252 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 72.411569824 s


12000x12000x12000	72.411570 s	47.727180 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 35.152459550 s


12000x12000x12000	35.152460 s	98.314600 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 71.292841672 s


12000x12000x12000	71.292842 s	48.476115 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 35.334228132 s


12000x12000x12000	35.334228 s	97.808844 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 73.735754914 s


12000x12000x12000	73.735755 s	46.870070 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 36.606276216 s


12000x12000x12000	36.606276 s	94.410040 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 74.348627571 s


12000x12000x12000	74.348628 s	46.483709 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 35.520267151 s


12000x12000x12000	35.520267 s	97.296566 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 83.323783415 s


12500x12500x12500	83.323783 s	46.880372 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 40.83022696 s


12500x12500x12500	40.083023 s	97.453978 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 84.220459609 s


12500x12500x12500	84.220460 s	46.381248 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 41.236709998 s


12500x12500x12500	41.236710 s	94.727489 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 83.726399263 s


12500x12500x12500	83.726399 s	46.654938 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 40.213159258 s


12500x12500x12500	40.213159 s	97.138600 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 83.837885506 s


12500x12500x12500	83.837886 s	46.592897 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 41.202787327 s


12500x12500x12500	41.202787 s	94.805479 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 80.910944885 s


12500x12500x12500	80.910945 s	48.278388 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 41.92368457 s


12500x12500x12500	41.092368 s	95.060230 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 94.682514540 s


13000x13000x13000	94.682515 s	46.407724 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 46.100416687 s


13000x13000x13000	46.100417 s	95.313672 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 93.731638452 s


13000x13000x13000	93.731638 s	46.878515 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 45.141639056 s


13000x13000x13000	45.141639 s	97.338070 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 94.636893507 s


13000x13000x13000	94.636894 s	46.430095 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 46.134985884 s


13000x13000x13000	46.134986 s	95.242253 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 91.359306847 s


13000x13000x13000	91.359307 s	48.095811 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 45.75891739 s


13000x13000x13000	45.075892 s	97.480046 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 94.505555085 s


13000x13000x13000	94.505555 s	46.494621 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 46.53053177 s


13000x13000x13000	46.053053 s	95.411698 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 103.355496504 s


13500x13500x13500	103.355497 s	47.609950 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 51.697568389 s


13500x13500x13500	51.697568 s	95.183394 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 105.706433968 s


13500x13500x13500	105.706434 s	46.551093 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 51.781728948 s


13500x13500x13500	51.781729 s	95.028693 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 104.752303345 s


13500x13500x13500	104.752303 s	46.975101 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 51.514024345 s


13500x13500x13500	51.514024 s	95.522531 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 104.577722045 s


13500x13500x13500	104.577722 s	47.053521 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 51.214340609 s


13500x13500x13500	51.214341 s	96.081487 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 105.607206296 s


13500x13500x13500	105.607206 s	46.594832 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 51.641713806 s


13500x13500x13500	51.641714 s	95.286342 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 116.672856179 s


14000x14000x14000	116.672856 s	47.037505 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 57.669898069 s


14000x14000x14000	57.669898 s	95.162298 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 119.66786910 s


14000x14000x14000	119.066787 s	46.091779 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 55.902709053 s


14000x14000x14000	55.902709 s	98.170555 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 116.952383545 s


14000x14000x14000	116.952384 s	46.925080 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 56.236619199 s


14000x14000x14000	56.236619 s	97.587659 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 114.374796600 s


14000x14000x14000	114.374797 s	47.982599 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(14000x14000) and matrix B(14000x14000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 56.532249671 s


14000x14000x14000	56.532250 s	97.077333 GFLOPS
File saved successfully
srun: Job step aborted: Waiting up to 32 seconds for job step to finish.
slurmstepd: error: *** JOB 477534 ON epyc008 CANCELLED AT 2025-09-26T14:58:08 DUE TO TIME LIMIT ***
slurmstepd: error: *** STEP 477534.248 ON epyc008 CANCELLED AT 2025-09-26T14:58:08 DUE TO TIME LIMIT ***
