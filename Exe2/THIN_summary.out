Loading modules...
Modules loaded
Results will be stored in ./fixed_cores/closed_cores

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.400245708 s


2000x2000x2000	0.400246 s	39.975444 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.195011630 s


2000x2000x2000	0.195012 s	82.046389 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.399733422 s


2000x2000x2000	0.399733 s	40.026676 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.193859740 s


2000x2000x2000	0.193860 s	82.533898 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.400017777 s


2000x2000x2000	0.400018 s	39.998222 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.194441471 s


2000x2000x2000	0.194441 s	82.286973 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.398927426 s


2000x2000x2000	0.398927 s	40.107546 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.193940982 s


2000x2000x2000	0.193941 s	82.499324 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.401163288 s


2000x2000x2000	0.401163 s	39.884009 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2000x2000) and matrix B(2000x2000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.194828023 s


2000x2000x2000	0.194828 s	82.123710 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.779767719 s


2500x2500x2500	0.779768 s	40.076037 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.375935900 s


2500x2500x2500	0.375936 s	83.125873 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.774803673 s


2500x2500x2500	0.774804 s	40.332798 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.376736703 s


2500x2500x2500	0.376737 s	82.949178 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.772464812 s


2500x2500x2500	0.772465 s	40.454917 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.375709437 s


2500x2500x2500	0.375709 s	83.175978 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.773371566 s


2500x2500x2500	0.773372 s	40.407485 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.377682798 s


2500x2500x2500	0.377683 s	82.741391 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.778394554 s


2500x2500x2500	0.778395 s	40.146735 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(2500x2500) and matrix B(2500x2500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.375771074 s


2500x2500x2500	0.375771 s	83.162335 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.329793525 s


3000x3000x3000	1.329794 s	40.607808 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.643960606 s


3000x3000x3000	0.643961 s	83.856061 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.326952215 s


3000x3000x3000	1.326952 s	40.694759 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.642997487 s


3000x3000x3000	0.642997 s	83.981666 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.329811152 s


3000x3000x3000	1.329811 s	40.607270 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.644272521 s


3000x3000x3000	0.644273 s	83.815464 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.335071544 s


3000x3000x3000	1.335072 s	40.447271 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.642943891 s


3000x3000x3000	0.642944 s	83.988666 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.336083285 s


3000x3000x3000	1.336083 s	40.416642 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3000x3000) and matrix B(3000x3000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 0.644525083 s


3000x3000x3000	0.644525 s	83.782620 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.136165453 s


3500x3500x3500	2.136165 s	40.142022 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.18971369 s


3500x3500x3500	1.018971 s	84.153493 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.128105178 s


3500x3500x3500	2.128105 s	40.294061 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.22203986 s


3500x3500x3500	1.022204 s	83.887366 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.107545583 s


3500x3500x3500	2.107546 s	40.687139 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.18704485 s


3500x3500x3500	1.018704 s	84.175540 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.118272420 s


3500x3500x3500	2.118272 s	40.481101 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.18482253 s


3500x3500x3500	1.018482 s	84.193907 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.131002348 s


3500x3500x3500	2.131002 s	40.239280 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(3500x3500) and matrix B(3500x3500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.19114864 s


3500x3500x3500	1.019115 s	84.141644 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.147029491 s


4000x4000x4000	3.147029 s	40.673276 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.516892850 s


4000x4000x4000	1.516893 s	84.383020 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.189901319 s


4000x4000x4000	3.189901 s	40.126633 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.514652583 s


4000x4000x4000	1.514653 s	84.507828 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.176547075 s


4000x4000x4000	3.176547 s	40.295326 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.516570797 s


4000x4000x4000	1.516571 s	84.400939 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.179096510 s


4000x4000x4000	3.179097 s	40.263012 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.517486273 s


4000x4000x4000	1.517486 s	84.350022 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.153704253 s


4000x4000x4000	3.153704 s	40.587192 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4000x4000) and matrix B(4000x4000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 1.520406525 s


4000x4000x4000	1.520407 s	84.188010 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.524193563 s


4500x4500x4500	4.524194 s	40.283422 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.170281875 s


4500x4500x4500	2.170282 s	83.975267 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.507452728 s


4500x4500x4500	4.507453 s	40.433036 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.172105424 s


4500x4500x4500	2.172105 s	83.904767 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.491470445 s


4500x4500x4500	4.491470 s	40.576912 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.191908963 s


4500x4500x4500	2.191909 s	83.146701 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.497213147 s


4500x4500x4500	4.497213 s	40.525097 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.177255169 s


4500x4500x4500	2.177255 s	83.706312 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 4.496264103 s


4500x4500x4500	4.496264 s	40.533651 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(4500x4500) and matrix B(4500x4500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.168981356 s


4500x4500x4500	2.168981 s	84.025619 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.194129932 s


5000x5000x5000	6.194130 s	40.360794 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.989951343 s


5000x5000x5000	2.989951 s	83.613401 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.154131679 s


5000x5000x5000	6.154132 s	40.623115 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.986431756 s


5000x5000x5000	2.986432 s	83.711941 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.186204828 s


5000x5000x5000	6.186205 s	40.412500 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.980098530 s


5000x5000x5000	2.980099 s	83.889844 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.208503701 s


5000x5000x5000	6.208504 s	40.267351 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.985495798 s


5000x5000x5000	2.985496 s	83.738185 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.170653967 s


5000x5000x5000	6.170654 s	40.514344 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 2.986571182 s


5000x5000x5000	2.986571 s	83.708033 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.235068357 s


5500x5500x5500	8.235068 s	40.406465 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.967540350 s


5500x5500x5500	3.967540 s	83.868082 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.240974016 s


5500x5500x5500	8.240974 s	40.377509 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.959604528 s


5500x5500x5500	3.959605 s	84.036170 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.312022809 s


5500x5500x5500	8.312023 s	40.032373 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.970160617 s


5500x5500x5500	3.970161 s	83.812730 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.283126900 s


5500x5500x5500	8.283127 s	40.172027 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.956243013 s


5500x5500x5500	3.956243 s	84.107574 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.224020273 s


5500x5500x5500	8.224020 s	40.460747 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5500x5500) and matrix B(5500x5500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 3.968739256 s


5500x5500x5500	3.968739 s	83.842747 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.655227476 s


6000x6000x6000	10.655227 s	40.543480 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.143645608 s


6000x6000x6000	5.143646 s	83.987124 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.654307067 s


6000x6000x6000	10.654307 s	40.546982 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.129411639 s


6000x6000x6000	5.129412 s	84.220186 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.611217163 s


6000x6000x6000	10.611217 s	40.711635 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.141401023 s


6000x6000x6000	5.141401 s	84.023790 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.680819554 s


6000x6000x6000	10.680820 s	40.446334 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.143428406 s


6000x6000x6000	5.143428 s	83.990670 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 10.710602201 s


6000x6000x6000	10.710602 s	40.333867 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6000x6000) and matrix B(6000x6000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 5.145626118 s


6000x6000x6000	5.145626 s	83.954798 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.586849039 s


6500x6500x6500	13.586849 s	40.425120 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.543035126 s


6500x6500x6500	6.543035 s	83.944223 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.565543698 s


6500x6500x6500	13.565544 s	40.488609 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.534071183 s


6500x6500x6500	6.534071 s	84.059384 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.590704166 s


6500x6500x6500	13.590704 s	40.413653 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.527118136 s


6500x6500x6500	6.527118 s	84.148929 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.564735988 s


6500x6500x6500	13.564736 s	40.491020 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.505885652 s


6500x6500x6500	6.505886 s	84.423556 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 13.641387782 s


6500x6500x6500	13.641388 s	40.263499 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(6500x6500) and matrix B(6500x6500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 6.518594355 s


6500x6500x6500	6.518594 s	84.258963 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 16.925304893 s


7000x7000x7000	16.925305 s	40.531028 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.164954361 s


7000x7000x7000	8.164954 s	84.017616 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.47600120 s


7000x7000x7000	17.047600 s	40.240268 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.146837916 s


7000x7000x7000	8.146838 s	84.204449 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.52326656 s


7000x7000x7000	17.052327 s	40.229114 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.174551735 s


7000x7000x7000	8.174552 s	83.918975 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 16.916639465 s


7000x7000x7000	16.916639 s	40.551789 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.140457043 s


7000x7000x7000	8.140457 s	84.270453 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.22309092 s


7000x7000x7000	17.022309 s	40.300055 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7000x7000) and matrix B(7000x7000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 8.140904945 s


7000x7000x7000	8.140905 s	84.265816 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.882143325 s


7500x7500x7500	20.882143 s	40.405335 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.996155182 s


7500x7500x7500	9.996155 s	84.407453 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.868415625 s


7500x7500x7500	20.868416 s	40.431915 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.968822177 s


7500x7500x7500	9.968822 s	84.638886 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.860788553 s


7500x7500x7500	20.860789 s	40.446697 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.976841382 s


7500x7500x7500	9.976841 s	84.570854 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.882631177 s


7500x7500x7500	20.882631 s	40.404391 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.984929125 s


7500x7500x7500	9.984929 s	84.502352 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.913217524 s


7500x7500x7500	20.913218 s	40.345298 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(7500x7500) and matrix B(7500x7500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 9.984269622 s


7500x7500x7500	9.984270 s	84.507934 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 25.252324341 s


8000x8000x8000	25.252324 s	40.550723 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.138965151 s


8000x8000x8000	12.138965 s	84.356449 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 25.220897340 s


8000x8000x8000	25.220897 s	40.601252 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.182070163 s


8000x8000x8000	12.182070 s	84.057963 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 25.267118856 s


8000x8000x8000	25.267119 s	40.526979 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.171062448 s


8000x8000x8000	12.171062 s	84.133986 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 25.311449480 s


8000x8000x8000	25.311449 s	40.456000 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.160707780 s


8000x8000x8000	12.160708 s	84.205625 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 25.292345650 s


8000x8000x8000	25.292346 s	40.486557 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8000x8000) and matrix B(8000x8000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 12.160957079 s


8000x8000x8000	12.160957 s	84.203899 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 30.466764556 s


8500x8500x8500	30.466765 s	40.314422 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.587524477 s


8500x8500x8500	14.587524 s	84.198659 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 30.540436126 s


8500x8500x8500	30.540436 s	40.217173 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.722775874 s


8500x8500x8500	14.722776 s	83.425165 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 30.451869987 s


8500x8500x8500	30.451870 s	40.334140 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.593466431 s


8500x8500x8500	14.593466 s	84.164376 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 30.647111001 s


8500x8500x8500	30.647111 s	40.077187 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.577956005 s


8500x8500x8500	14.577956 s	84.253924 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 30.344286246 s


8500x8500x8500	30.344286 s	40.477143 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(8500x8500) and matrix B(8500x8500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 14.615932196 s


8500x8500x8500	14.615932 s	84.035009 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 36.114005940 s


9000x9000x9000	36.114006 s	40.372148 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.327143255 s


9000x9000x9000	17.327143 s	84.145435 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 36.173191928 s


9000x9000x9000	36.173192 s	40.306092 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.421334687 s


9000x9000x9000	17.421335 s	83.690488 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 36.173528582 s


9000x9000x9000	36.173529 s	40.305717 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.298765854 s


9000x9000x9000	17.298766 s	84.283469 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 36.78190615 s


9000x9000x9000	36.078191 s	40.412226 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.325184060 s


9000x9000x9000	17.325184 s	84.154950 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 36.165441450 s


9000x9000x9000	36.165441 s	40.314730 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9000x9000) and matrix B(9000x9000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 17.404126919 s


9000x9000x9000	17.404127 s	83.773234 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 42.418402083 s


9500x9500x9500	42.418402 s	40.424672 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.390483045 s


9500x9500x9500	20.390483 s	84.095605 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 42.245965776 s


9500x9500x9500	42.245966 s	40.589675 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.406631633 s


9500x9500x9500	20.406632 s	84.029056 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 42.224427709 s


9500x9500x9500	42.224428 s	40.610379 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.383125402 s


9500x9500x9500	20.383125 s	84.125960 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 42.291241976 s


9500x9500x9500	42.291242 s	40.546220 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.414744061 s


9500x9500x9500	20.414744 s	83.995665 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 42.322652884 s


9500x9500x9500	42.322653 s	40.516127 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(9500x9500) and matrix B(9500x9500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 20.411939964 s


9500x9500x9500	20.411940 s	84.007204 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 49.478736998 s


10000x10000x10000	49.478737 s	40.421404 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 23.794017447 s


10000x10000x10000	23.794017 s	84.054742 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 49.519027605 s


10000x10000x10000	49.519028 s	40.388515 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 23.841716771 s


10000x10000x10000	23.841717 s	83.886577 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 49.382300704 s


10000x10000x10000	49.382301 s	40.500341 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 23.817418649 s


10000x10000x10000	23.817419 s	83.972156 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 49.450959448 s


10000x10000x10000	49.450959 s	40.444109 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 23.822591415 s


10000x10000x10000	23.822591 s	83.953923 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 49.479179526 s


10000x10000x10000	49.479180 s	40.421042 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 23.767198949 s


10000x10000x10000	23.767199 s	84.149588 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 57.348764090 s


10500x10500x10500	57.348764 s	40.371402 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 27.508529166 s


10500x10500x10500	27.508529 s	84.164805 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 57.263720141 s


10500x10500x10500	57.263720 s	40.431359 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 27.505705089 s


10500x10500x10500	27.505705 s	84.173447 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 57.605634241 s


10500x10500x10500	57.605634 s	40.191381 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 27.496655927 s


10500x10500x10500	27.496656 s	84.201148 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 57.393336826 s


10500x10500x10500	57.393337 s	40.340049 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 27.513459887 s


10500x10500x10500	27.513460 s	84.149722 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 57.345785817 s


10500x10500x10500	57.345786 s	40.373499 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10500x10500) and matrix B(10500x10500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 27.474150483 s


10500x10500x10500	27.474150 s	84.270122 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 66.226277475 s


11000x11000x11000	66.226277 s	40.195525 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 31.558766738 s


11000x11000x11000	31.558767 s	84.350571 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 66.132557947 s


11000x11000x11000	66.132558 s	40.252488 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 31.648361879 s


11000x11000x11000	31.648362 s	84.111778 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 65.932083320 s


11000x11000x11000	65.932083 s	40.374881 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 31.642966568 s


11000x11000x11000	31.642967 s	84.126120 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 65.726655903 s


11000x11000x11000	65.726656 s	40.501072 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 31.551667764 s


11000x11000x11000	31.551668 s	84.369550 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 65.656793230 s


11000x11000x11000	65.656793 s	40.544167 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11000x11000) and matrix B(11000x11000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 31.559014183 s


11000x11000x11000	31.559014 s	84.349910 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 74.877719528 s


11500x11500x11500	74.877720 s	40.622898 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 35.994360316 s


11500x11500x11500	35.994360 s	84.506294 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 75.364678060 s


11500x11500x11500	75.364678 s	40.360419 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 35.971340237 s


11500x11500x11500	35.971340 s	84.560374 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 75.119406880 s


11500x11500x11500	75.119407 s	40.492199 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 35.972961650 s


11500x11500x11500	35.972962 s	84.556563 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 74.944145577 s


11500x11500x11500	74.944146 s	40.586893 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 35.957185563 s


11500x11500x11500	35.957186 s	84.593662 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 75.8629442 s


11500x11500x11500	75.008629 s	40.552001 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(11500x11500) and matrix B(11500x11500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 35.901770712 s


11500x11500x11500	35.901771 s	84.724233 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 85.108888848 s


12000x12000x12000	85.108889 s	40.606804 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 40.931183063 s


12000x12000x12000	40.931183 s	84.434403 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 85.717923332 s


12000x12000x12000	85.717923 s	40.318289 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 40.927480572 s


12000x12000x12000	40.927481 s	84.442041 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 85.728888246 s


12000x12000x12000	85.728888 s	40.313132 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 41.53929582 s


12000x12000x12000	41.053930 s	84.181954 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 85.46868847 s


12000x12000x12000	85.046869 s	40.636417 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 40.902371473 s


12000x12000x12000	40.902371 s	84.493878 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 85.203136818 s


12000x12000x12000	85.203137 s	40.561887 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12000x12000) and matrix B(12000x12000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 40.939517067 s


12000x12000x12000	40.939517 s	84.417215 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 96.489429416 s


12500x12500x12500	96.489429 s	40.483709 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 46.330019395 s


12500x12500x12500	46.330019 s	84.313584 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 96.832043152 s


12500x12500x12500	96.832043 s	40.340469 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 46.239845170 s


12500x12500x12500	46.239845 s	84.478008 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 96.759896972 s


12500x12500x12500	96.759897 s	40.370547 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 46.306408963 s


12500x12500x12500	46.306409 s	84.356574 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 96.951497820 s


12500x12500x12500	96.951498 s	40.290765 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 46.306720308 s


12500x12500x12500	46.306720 s	84.356007 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 96.426929248 s


12500x12500x12500	96.426929 s	40.509949 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(12500x12500) and matrix B(12500x12500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 46.336161726 s


12500x12500x12500	46.336162 s	84.302408 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 108.627053668 s


13000x13000x13000	108.627054 s	40.450328 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 52.166904000 s


13000x13000x13000	52.166904 s	84.229649 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 108.668838489 s


13000x13000x13000	108.668838 s	40.434775 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 52.128396342 s


13000x13000x13000	52.128396 s	84.291870 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 108.774770155 s


13000x13000x13000	108.774770 s	40.395397 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 52.144678721 s


13000x13000x13000	52.144679 s	84.265549 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 109.292099032 s


13000x13000x13000	109.292099 s	40.204187 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 52.158907544 s


13000x13000x13000	52.158908 s	84.242562 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 109.464915676 s


13000x13000x13000	109.464916 s	40.140715 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13000x13000) and matrix B(13000x13000)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 52.497069172 s


13000x13000x13000	52.497069 s	83.699911 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 121.501664404 s


13500x13500x13500	121.501664 s	40.499445 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 58.286938859 s


13500x13500x13500	58.286939 s	84.422859 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using double 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 121.859058907 s


13500x13500x13500	121.859059 s	40.380666 GFLOPS
File saved successfully

 This example computes real matrix C=alpha*A*B+beta*C using 
 BLAS function dgemm, where A, B, and  C are matrices and 
 alpha and beta are scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(13500x13500) and matrix B(13500x13500)

 Using float 

 Computing matrix product using gemm function via CBLAS interface 

 Elapsed time 58.249193768 s


13500x13500x13500	58.249194 s	84.477564 GFLOPS
File saved successfully
srun: Job step aborted: Waiting up to 32 seconds for job step to finish.
slurmstepd: error: *** JOB 478017 ON thin002 CANCELLED AT 2025-09-26T17:14:38 DUE TO TIME LIMIT ***
slurmstepd: error: *** STEP 478017.234 ON thin002 CANCELLED AT 2025-09-26T17:14:38 DUE TO TIME LIMIT ***
